# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.utils import util


class TokenResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, token=None, is_registered=None):  # noqa: E501
        """TokenResponse - a model defined in OpenAPI

        :param token: The token of this TokenResponse.  # noqa: E501
        :type token: str
        :param is_registered: The is_registered of this TokenResponse.  # noqa: E501
        :type is_registered: bool
        """
        self.openapi_types = {"token": str, "is_registered": bool}

        self.attribute_map = {"token": "token", "is_registered": "isRegistered"}

        self._token = token
        self._is_registered = is_registered

    @classmethod
    def from_dict(cls, dikt) -> "TokenResponse":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The tokenResponse of this TokenResponse.  # noqa: E501
        :rtype: TokenResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def token(self):
        """Gets the token of this TokenResponse.


        :return: The token of this TokenResponse.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this TokenResponse.


        :param token: The token of this TokenResponse.
        :type token: str
        """

        self._token = token

    @property
    def is_registered(self):
        """Gets the is_registered of this TokenResponse.


        :return: The is_registered of this TokenResponse.
        :rtype: bool
        """
        return self._is_registered

    @is_registered.setter
    def is_registered(self, is_registered):
        """Sets the is_registered of this TokenResponse.


        :param is_registered: The is_registered of this TokenResponse.
        :type is_registered: bool
        """

        self._is_registered = is_registered
